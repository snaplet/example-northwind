// eslint-disable-next-line @typescript-eslint/triple-slash-reference
/// <reference path=".snaplet/snaplet.d.ts" />
// This config was generated by Snaplet make sure to check it over before using it.
import { copycat, faker } from "@snaplet/copycat";
import { defineConfig } from "snaplet";
export default defineConfig({
  transform: {
    public: {
      _prisma_migrations({ row }) {
        return {
          checksum: copycat.scramble(row.checksum),
        };
      },
      categories({ row }) {
        return {
          picture: copycat.hex(row.picture),
        };
      },
      customers({ row }) {
        return {
          address: copycat.postalAddress(row.address),
          city: copycat.city(row.city),
          postal_code: copycat.scramble(row.postal_code, {
            preserve: ["#", "-"],
          }),
          country: copycat.country(row.country),
          phone: copycat.phoneNumber(row.phone),
          fax: copycat.mac(row.fax),
        };
      },
      employees({ row }) {
        return {
          last_name: copycat.lastName(row.last_name),
          first_name: copycat.firstName(row.first_name),
          birth_date: copycat.dateString(row.birth_date, {
            minYear: 1950,
            maxYear: 2000,
          }),
          address: copycat.postalAddress(row.address),
          city: copycat.city(row.city),
          postal_code: copycat.scramble(row.postal_code, {
            preserve: ["#", "-"],
          }),
          country: copycat.country(row.country),
          home_phone: copycat.phoneNumber(row.home_phone),
          photo: copycat.hex(row.photo),
        };
      },
      orders({ row }) {
        return {
          ship_address: copycat.postalAddress(row.ship_address),
          ship_city: copycat.city(row.ship_city),
          ship_country: copycat.country(row.ship_country),
        };
      },
      shippers({ row }) {
        return {
          phone: copycat.phoneNumber(row.phone),
        };
      },
      suppliers({ row }) {
        return {
          address: copycat.postalAddress(row.address),
          city: copycat.city(row.city),
          postal_code: copycat.scramble(row.postal_code, {
            preserve: ["#", "-"],
          }),
          country: copycat.country(row.country),
          phone: copycat.phoneNumber(row.phone),
          fax: copycat.mac(row.fax),
        };
      },
      us_states({ row }) {
        return {
          state_name: copycat.state(row.state_name),
          state_abbr: copycat.state(row.state_abbr),
          state_region: copycat.state(row.state_region),
        };
      },
    },
    storage: {
      migrations({ row }) {
        return {
          hash: copycat.scramble(row.hash),
        };
      },
      objects({ row }) {
        return {
          metadata: {
            [copycat.word(row.metadata)]: copycat.words(row.metadata),
          },
        };
      },
    },
  },
});
